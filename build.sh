#!/bin/bash

set -e  # –ü—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

function build_frontend() {
    echo "üåê –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É frontend..."
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è frontend
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend..."
    cd frontend
    npm install
    cd ..
    echo "‚úÖ –°–±–æ—Ä–∫–∞ frontend —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

function build_backend() {
    echo "üîß –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É backend..."
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è backend
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend..."
    cd backend
    python -m pip install -r requirements.txt
    cd ..
    echo "‚úÖ –°–±–æ—Ä–∫–∞ backend —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

function build_project() {
    echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞..."

    build_frontend
    build_backend

    echo "‚úÖ –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

function start_project() {
    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
    
    # –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞
    echo "üîß –ó–∞–ø—É—Å–∫ backend..."
    cd backend
    python wsgi.py > ../backend.log 2>&1 &
    BACKEND_PID=$!
    echo $BACKEND_PID > ../backend.pid
    cd ..
    
    # –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    echo "üåê –ó–∞–ø—É—Å–∫ frontend..."
    cd frontend
    npm run dev > ../frontend.log 2>&1 &
    FRONTEND_PID=$!
    echo $FRONTEND_PID > ../frontend.pid
    cd ..
    
    echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω!"
    echo "üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5173/login"
    echo "üìù –õ–æ–≥–∏ –±—ç–∫–µ–Ω–¥–∞: backend.log"
    echo "üìù –õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: frontend.log"
    echo "‚ö†Ô∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ./build.sh stop"
}

function stop_project() {
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—ç–∫–µ–Ω–¥–∞
    if [ -f "backend.pid" ]; then
        BACKEND_PID=$(cat backend.pid)
        if ps -p $BACKEND_PID > /dev/null; then
            echo "üîß –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backend (PID: $BACKEND_PID)..."
            kill $BACKEND_PID
        else
            echo "üîß –ü—Ä–æ—Ü–µ—Å—Å backend (PID: $BACKEND_PID) —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        rm backend.pid
    else
        echo "üîß –§–∞–π–ª —Å PID –¥–ª—è backend –Ω–µ –Ω–∞–π–¥–µ–Ω"
        pkill -f "python wsgi.py" || true
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    if [ -f "frontend.pid" ]; then
        FRONTEND_PID=$(cat frontend.pid)
        if ps -p $FRONTEND_PID > /dev/null; then
            echo "üåê –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º frontend (PID: $FRONTEND_PID)..."
            kill $FRONTEND_PID
        else
            echo "üåê –ü—Ä–æ—Ü–µ—Å—Å frontend (PID: $FRONTEND_PID) —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        rm frontend.pid
    else
        echo "üåê –§–∞–π–ª —Å PID –¥–ª—è frontend –Ω–µ –Ω–∞–π–¥–µ–Ω"
        pkill -f "node.*vite" || true
    fi
    
    echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
}

case "$1" in
    "stop")
        stop_project
        ;;
    "start")
        start_project
        ;;
    "build")
        build_project
        ;;
    "build-frontend")
        build_frontend
        ;;
    "build-backend")
        build_backend
        ;;
    *)
        build_project
        start_project
        ;;
esac 